apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "worker.fullname" . }}
  labels:
    {{- include "worker.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "worker.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "worker.selectorLabels" . | nindent 8 }}
    spec:
      # Future enhancement option: initContainer for git-pulling tests into /data
      subdomain: "openqa-k8s-kpou2-rockylinux-org"
      tolerations:
        - key: "peridot.rockylinux.org/workflow-tolerates-arch"
          value: s390x
          operator: "Equal"
          effect: "NoSchedule"
        - key: "ops.resf.org/workflow-purpose"
          value: openqa
          operator: "Equal"
          effect: "NoSchedule"
      containers:
        {{ if .Values.cacheService -}}
        - name: {{ include "worker.fullname" . }}-cacheservice
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/bin/su"]
          args: ["_openqa-worker", "-c", "/usr/share/openqa/script/openqa-workercache-daemon"]
          volumeMounts:
            - name: cache
              mountPath: /var/lib/openqa/cache
            - name: config
              mountPath: /data/conf
              readOnly: true
            - name: resolvconf
              mountPath: /etc/resolv.conf
              readOnly: true
        - name: {{ include "worker.fullname" . }}-cacheservice-minion
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/bin/su"]
          args: ["_openqa-worker", "-c", "/usr/share/openqa/script/openqa-worker-cacheservice-minion"]
          volumeMounts:
            - name: cache
              mountPath: /var/lib/openqa/cache
            - name: config
              mountPath: /data/conf
              readOnly: true
            - name: resolvconf
              mountPath: /etc/resolv.conf
              readOnly: true
        {{ end -}}
        - name: {{ include "worker.fullname" . }}
          env:
            - name: qemu_no_kvm
              value: "0"
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            privileged: true
          volumeMounts:
            {{ if .Values.cacheService -}}
            - name: cache
              mountPath: /var/lib/openqa/cache
            {{ else -}}
            - mountPath: /data/factory
              name: factory
            - mountPath: /data/tests
              name: tests
              readOnly: true
            {{ end -}}
            - name: config
              mountPath: /data/conf
              readOnly: true
            - name: resolvconf
              mountPath: /etc/resolv.conf
              readOnly: true
      nodeSelector:
        {{- if .Values.selectorLabels }}
        {{- range $key, $value := .Values.selectorLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
        {{- end }}
      restartPolicy: Always
      volumes:
        {{ if .Values.cacheService -}}
        - name: cache
          persistentVolumeClaim:
            claimName: {{ include "worker.fullname" . }}-cache
        {{ else -}}
        - name: factory
          emptyDir: {}
        - name: tests
          emptyDir: {}
        {{ end -}}
        - name: resolvconf
          hostPath:
            path: /etc/resolv.conf
        - name: config
          configMap:
            name: {{ include "worker.fullname" . }}-configmap
            items:
              - key: client_conf
                path: client.conf
              - key: workers_ini
                path: workers.ini
